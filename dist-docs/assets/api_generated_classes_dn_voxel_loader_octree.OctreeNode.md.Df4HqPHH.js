import {
  _ as a,
  c as t,
  o as r,
  ae as o,
} from './chunks/framework.vCSBSCtM.js';
const u = JSON.parse(
    '{"title":"Class: OctreeNode","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/classes/dn_voxel_loader_octree.OctreeNode.md","filePath":"api/generated/classes/dn_voxel_loader_octree.OctreeNode.md"}'
  ),
  d = { name: 'api/generated/classes/dn_voxel_loader_octree.OctreeNode.md' };
function n(l, e, i, c, s, h) {
  return (
    r(),
    t(
      'div',
      null,
      e[0] ||
        (e[0] = [
          o(
            '<p><a href="./../README.html">dn-voxel-loader - v0.1.0</a> / <a href="./../modules/dn_voxel_loader_octree.html">dn-voxel-loader/octree</a> / OctreeNode</p><h1 id="class-octreenode" tabindex="-1">Class: OctreeNode <a class="header-anchor" href="#class-octreenode" aria-label="Permalink to &quot;Class: OctreeNode&quot;">​</a></h1><p><a href="./../modules/dn_voxel_loader_octree.html">dn-voxel-loader/octree</a>.OctreeNode</p><p>Represents a node in the Sparse Octree. It can either be an internal node with 8 children or a leaf node holding data.</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./dn_voxel_loader_octree.OctreeNode.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./dn_voxel_loader_octree.OctreeNode.html#children">children</a></li><li><a href="./dn_voxel_loader_octree.OctreeNode.html#data">data</a></li><li><a href="./dn_voxel_loader_octree.OctreeNode.html#isleaf">isLeaf</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./dn_voxel_loader_octree.OctreeNode.html#isempty">isEmpty</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new OctreeNode</strong>(): <a href="./dn_voxel_loader_octree.OctreeNode.html"><code>OctreeNode</code></a></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./dn_voxel_loader_octree.OctreeNode.html"><code>OctreeNode</code></a></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>octree.js:34</p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="children" tabindex="-1">children <a class="header-anchor" href="#children" aria-label="Permalink to &quot;children&quot;">​</a></h3><p>• <strong>children</strong>: <a href="./dn_voxel_loader_octree.OctreeNode.html"><code>OctreeNode</code></a>[] = <code>null</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>octree.js:26</p><hr><h3 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h3><p>• <strong>data</strong>: <code>Object</code> = <code>null</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>colorIndex</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>materialId?</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>octree.js:29</p><hr><h3 id="isleaf" tabindex="-1">isLeaf <a class="header-anchor" href="#isleaf" aria-label="Permalink to &quot;isLeaf&quot;">​</a></h3><p>• <strong>isLeaf</strong>: <code>boolean</code> = <code>false</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>octree.js:32</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="isempty" tabindex="-1">isEmpty <a class="header-anchor" href="#isempty" aria-label="Permalink to &quot;isEmpty&quot;">​</a></h3><p>▸ <strong>isEmpty</strong>(): <code>boolean</code></p><p>Determines if this node is effectively empty (no data and no children with data).</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>octree.js:44</p>',
            43
          ),
        ])
    )
  );
}
const p = a(d, [['render', n]]);
export { u as __pageData, p as default };
